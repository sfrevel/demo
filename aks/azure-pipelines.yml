
trigger: none
#- main

parameters:
- name: planType
  type: string
  default: "apply"
  values: [ "apply", "destroy" ]

pool:
  name: ADO-Agent-Pool

stages:
- stage: Init
  displayName: 'Init Agent'
  jobs:
  - job: InitAgent
    displayName: 'Init Agent'
    steps:
    - template: ../download-terragrunt.yaml

    - script: |
        sudo apt-get install unzip
        curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
      displayName: 'Install tools on Agent if needed'

- stage: Plan
  displayName: 'Terraform plan'
  jobs:
  - job: TerraformPlan
    displayName: 'Terraform plan'
    steps:
    - template: ../download-terragrunt.yaml

    - checkout: none
    - task: TerraformInstaller@1
      displayName: install terraform
      inputs:
        terraformVersion: 1.8.5
    - task: AzureKeyVault@1
      inputs:
        azureSubscription: 'Demopipelinekeyvault'
        KeyVaultName: 'demopipelinekeyvault'
        SecretsFilter: '*'
        RunAsPreJob: false

    - script: |
        terragrunt plan-all --terragrunt-working-dir env/dev  
      displayName: 'TEST plan with terragrunt'
      env:
          ARM_CLIENT_ID: $(AKS-SP-APP-ID)
          ARM_CLIENT_SECRET: $(AKS-SP-PASSWORD)
          ARM_TENANT_ID: $(TENANT)
          ARM_SUBSCRIPTION_ID: $(SUBSCRIPTION)
          ARM_SAS_TOKEN: $(BACKEND-SAS-TOKEN)
#          PLANTYPE: ${{ parameters.planType }}

    - script: |
        cd aks
        az login --service-principal -u $ARM_CLIENT_ID -p $ARM_CLIENT_SECRET --tenant $ARM_TENANT_ID
        az account set --subscription $ARM_SUBSCRIPTION_ID
        terraform --version
        terraform init -backend-config="sas_token=$(BACKEND-SAS-TOKEN)"
        echo terraform plan $([[ "$PLANTYPE" == "destroy" ]] && echo "-$PLANTYPE" || echo "") -var appId=$ARM_CLIENT_ID -var password=$ARM_CLIENT_SECRET -out aks.plan
        terraform plan $([[ "$PLANTYPE" == "destroy" ]] && echo "-$PLANTYPE" || echo "") -var appId=$ARM_CLIENT_ID -var password=$ARM_CLIENT_SECRET -out aks.plan
      displayName: 'Terraform init and plan'
      env:
          ARM_CLIENT_ID: $(AKS-SP-APP-ID)
          ARM_CLIENT_SECRET: $(AKS-SP-PASSWORD)
          ARM_TENANT_ID: $(TENANT)
          ARM_SUBSCRIPTION_ID: $(SUBSCRIPTION)
          PLANTYPE: ${{ parameters.planType }}

- stage: Deploy
  displayName: 'Terraform ${{ parameters.planType }}'
  jobs:
  - job: TerraformApply
    displayName: 'Terraform ${{ parameters.planType }}'
    steps:
    - template: ../download-terragrunt.yaml

    - checkout: none
    - task: TerraformInstaller@1
      displayName: install terraform
      inputs:
        terraformVersion: 1.8.5

    - task: AzureKeyVault@1
      inputs:
        azureSubscription: 'Demopipelinekeyvault'
        KeyVaultName: 'demopipelinekeyvault'
        SecretsFilter: '*'
        RunAsPreJob: false

    - script: |
        cd aks
        az login --service-principal -u $ARM_CLIENT_ID -p $ARM_CLIENT_SECRET --tenant $ARM_TENANT_ID
        az account set --subscription $ARM_SUBSCRIPTION_ID
        terraform --version
        terraform init -backend-config="sas_token=$(BACKEND-SAS-TOKEN)"
        terraform apply -auto-approve aks.plan
      displayName: 'Terraform init and ${{ parameters.planType }}'
      env:
          ARM_CLIENT_ID: $(AKS-SP-APP-ID)
          ARM_CLIENT_SECRET: $(AKS-SP-PASSWORD)
          ARM_TENANT_ID: $(TENANT)
          ARM_SUBSCRIPTION_ID: $(SUBSCRIPTION)
